{"version":3,"file":null,"sources":["../src/ng2-auto-complete.service.ts","../src/ng2-auto-complete.component.ts","../src/ng2-auto-complete.directive.ts","../src/ng2-auto-complete.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Http, Response} from \"@angular/http\";\nimport {Observable} from \"rxjs\";\nimport 'rxjs/Rx';\n\n/**\n * provides auto-complete related utility functions\n */\n@Injectable()\nexport class Ng2AutoComplete {\n\n  public source: string;\n  public pathToData: string;\n\n  constructor(private http: Http) {\n    // ...\n  }\n\n  filter(list: any[], keyword: string) {\n    return list.filter(\n      el => {\n        return !!JSON.stringify(el).match(new RegExp(keyword, 'i'));\n      }\n    );\n  }\n\n  /**\n   * return remote data from the given source and options, and data path\n   */\n  getRemoteData(options: any): Observable<Response> {\n  \n    let keyValues: any[] = [];\n    let url = \"\";\n    for (var key in options) { // replace all keyword to value\n      let regexp: RegExp = new RegExp(':'+key, 'g');\n      url = this.source;\n      if (url.match(regexp)) {\n        url = url.replace(regexp, options[key]);\n      } else {\n        keyValues.push(key + \"=\" + options[key]);\n      }\n    }\n    \n    if (keyValues.length) {\n      var qs = keyValues.join(\"&\");\n      url += url.match(/\\?[a-z]/i) ? qs : ('?' + qs);\n    }\n    \n    return this.http.get(url)\n      .map( resp => resp.json())\n      .map( resp => {\n        var list = resp.data  || resp;\n        if (this.pathToData) {\n          var paths = this.pathToData.split('.');\n          paths.forEach(function(el) {\n            list = list[el];\n          });\n        }\n        return list;\n      });\n  };\n}\n\n","import {Component, ElementRef, Input, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Subject} from \"rxjs/Subject\";\nimport {Ng2AutoComplete} from './ng2-auto-complete.service';\n\nvar module: any; // just to pass type check\n/**\n * show a selected date in monthly calendar\n * Each filteredList item has the following property in addition to data itself\n *   1. displayValue as string e.g. Allen Kim\n *   2. dataValue as any e.g. 1234\n */\n@Component({\n  selector: 'auto-complete',\n  template: `\n  <div class=\"auto-complete\">\n\n    <!-- keyword input -->\n    <input class=\"keyword\"\n           placeholder=\"{{placeholder}}\"\n           (focus)=\"showDropdownList()\"\n           (blur)=\"dropdownVisible=false\"\n           (keydown)=\"inputElKeyHandler($event)\"\n           (input)=\"reloadListInDelay()\"\n           [(ngModel)]=\"keyword\" />\n\n    <!-- dropdown that user can select -->\n    <ul *ngIf=\"dropdownVisible\">\n      <li *ngIf=\"isLoading\" class=\"loading\">Loading</li>\n      <li class=\"item\"\n          *ngFor=\"let item of filteredList; let i=index\"\n          (mousedown)=\"selectOne(item)\"\n          [ngClass]=\"{selected: i === itemIndex}\"\n          [innerHTML]=\"getFormattedList(item)\"\n          ></li>\n    </ul>\n\n  </div>`,\n  providers: [ Ng2AutoComplete ],\n  styles: [`\n  @keyframes slideDown {\n    0% {\n      transform:  translateY(-10px);\n    }\n    100% {\n      transform: translateY(0px);\n    }\n  }\n  .auto-complete input {\n    outline: none;\n    border: 2px solid transparent;\n    border-width: 3px 2px;\n    margin: 0;\n    box-sizing: border-box;\n    background-clip: content-box;\n  }\n\n  .auto-complete ul {\n    background-color: #fff;\n    margin: 0;\n    width : 100%;\n    overflow-y: auto;\n    list-style-type: none;\n    padding: 0;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n    animation: slideDown 0.1s;\n  }\n\n  .auto-complete ul li {\n    padding: 2px 5px;\n    border-bottom: 1px solid #eee;\n  }\n\n  .auto-complete ul li.selected {\n    background-color: #ccc;\n  }\n\n  .auto-complete ul li:last-child {\n    border-bottom: none;\n  }\n\n  .auto-complete ul li:hover {\n    background-color: #ccc;\n  }\n\n`],\n  //encapsulation: ViewEncapsulation.Native\n  encapsulation: ViewEncapsulation.None\n  // encapsulation: ViewEncapsulation.Emulated is default\n})\nexport class Ng2AutoCompleteComponent implements OnInit {\n\n  /**\n   * public variables\n   */\n  @Input('list-formatter') listFormatter: (arg: any) => void;\n  @Input('source') source: any;\n  @Input('path-to-data') pathToData: string;\n  @Input('min-chars') minChars: number = 0;\n  @Input('value-property-name') valuePropertyName: string = 'id';\n  @Input('display-property-name') displayPropertyName: string = 'value';\n  @Input('placeholder') placeholder: string;\n\n  public el: HTMLElement;\n  public inputEl: HTMLInputElement;\n\n  public dropdownVisible: boolean = false;\n  public isLoading: boolean = false;\n  public filteredList: any[] = [];\n  public itemIndex: number = 0;\n  public keyword: string;\n\n  public valueSelected: Subject<any> = new Subject();\n  /**\n   * constructor\n   */\n  constructor(\n    elementRef: ElementRef,\n    public autoComplete: Ng2AutoComplete\n  ) {\n    this.el = elementRef.nativeElement;\n  }\n\n  /**\n   * user enters into input el, shows list to select, then select one\n   */\n  ngOnInit(): void {\n    this.inputEl = <HTMLInputElement>(this.el.querySelector('input'));\n    this.autoComplete.source = this.source;\n    this.autoComplete.pathToData = this.pathToData;\n  }\n  \n  reloadListInDelay(): void {\n    let delayMs = this.source.constructor.name == 'Array' ? 10 : 500;\n    //executing after user stopped typing\n    this.delay(() => this.reloadList(), delayMs);\n  }\n\n  showDropdownList(): void {\n    this.keyword = '';\n    this.inputEl.focus();\n    this.reloadList();\n  }\n  \n  hideDropdownList(): void {\n    this.dropdownVisible = false;\n  }\n\n\n  reloadList(): void {\n    let keyword = this.inputEl.value;\n    this.hideDropdownList();\n\n    if (this.source.constructor.name == 'Array') { // local source, not remote\n\n      this.filteredList =\n        this.autoComplete.filter(this.source, this.keyword);\n      this.dropdownVisible = true;\n\n    } else { // remote source\n\n      if (keyword.length >= this.minChars) {\n\n        this.dropdownVisible = true;\n        this.isLoading = true;\n\n        let query = {keyword: keyword};\n        this.autoComplete.getRemoteData(query)\n          .subscribe(\n            resp => {\n              this.filteredList = (<any>resp);\n            },\n            error => null,\n            () => this.isLoading = false //complete\n          );\n      }\n    }\n  }\n\n  selectOne(data: any) {\n    this.hideDropdownList();\n    this.valueSelected.next(data);\n  };\n\n  inputElKeyHandler(evt: any) {\n    let totalNumItem = this.filteredList.length;\n\n    switch(evt.keyCode) {\n      case 27: // ESC, hide auto complete\n        this.hideDropdownList();\n        break;\n\n      case 38: // UP, select the previous li el\n        this.itemIndex = (totalNumItem + this.itemIndex - 1) % totalNumItem;\n        break;\n\n      case 40: // DOWN, select the next li el or the first one\n        this.dropdownVisible=true;\n        this.itemIndex = (totalNumItem + this.itemIndex + 1) % totalNumItem;\n        break;\n\n      case 13: // ENTER, choose it!!\n        if(this.filteredList.length > 0) {\n          this.selectOne(this.filteredList[this.itemIndex]);\n        }\n        evt.preventDefault();\n        break;\n    }\n  };\n  \n  getFormattedList(data: any): string {\n    let formatter = this.listFormatter || this.defaultListFormatter;\n    return formatter.apply(this, [data]);\n  }\n  \n  private defaultListFormatter(data: any): string {\n    let html: string = \"\";\n    html += data[this.valuePropertyName] ? `<b>(${data[this.valuePropertyName]})</b>`: \"\";\n    html += data[this.displayPropertyName] ? `<span>${data[this.displayPropertyName]}</span>`: data;\n    return html;\n  }\n\n  private delay = (function(){\n    var timer = 0;\n    return function(callback: any, ms: number){\n      clearTimeout(timer);\n      timer = setTimeout(callback, ms);\n    };\n  })();\n\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  ComponentRef,\n  ViewContainerRef,\n  EventEmitter,\n  OnInit,\n  ComponentResolver,\n  Type, ComponentFactoryResolver\n} from '@angular/core';\nimport {Ng2AutoCompleteComponent} from \"./ng2-auto-complete.component\";\nimport \"rxjs/Rx\"\n\n/**\n * display auto-complete section with input and dropdown list when it is clicked\n */\n@Directive({\n  selector: '[auto-complete], [ng2-auto-complete]',\n  host: {\n    '(click)': 'showAutoCompleteDropdown()'\n  }\n})\nexport class Ng2AutoCompleteDirective implements OnInit {\n\n  @Input() placeholder: string;\n  @Input('list-formatter') listFormatter: (arg: any) => void;\n  //@Input('prefill-func') prefillFunc: function;\n  @Input('value-changed') valueChanged: (value: any) => void;\n  @Input('source') source: any;\n  @Input('path-to-data') pathToData: string;\n  @Input('min-chars') minChars: number;\n  @Input('value-property-name') valuePropertyName: string;\n  @Input('display-property-name') displayPropertyName: string;\n\n  @Input() ngModel: String;\n  @Output() ngModelChange = new EventEmitter();\n\n  public componentRef: ComponentRef<Ng2AutoCompleteComponent>;\n  public el: HTMLElement;   // input or select element\n  public acEl: HTMLElement; // auto complete element\n\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    public  viewContainerRef: ViewContainerRef\n  ) {\n    this.el = this.viewContainerRef.element.nativeElement;\n  }\n\n  ngOnInit(): void {\n    let divEl = document.createElement(\"div\");\n    divEl.className = 'ng2-auto-complete';\n    divEl.style.display = 'inline-block';\n    divEl.style.position = 'relative';\n    this.el.parentElement.insertBefore(divEl, this.el.nextSibling);\n    divEl.appendChild(this.el);\n    this.selectNewValue(this.ngModel);\n  }\n\n  ngOnDestroy(): void {\n    if (this.componentRef) {\n      this.componentRef.instance.valueSelected.unsubscribe();\n    }\n    document.removeEventListener('click', this.hideAutoCompleteDropdown);\n  }\n\n  //show auto-complete list below the current element\n  showAutoCompleteDropdown() {\n    document.addEventListener('click', this.hideAutoCompleteDropdown);\n    this.hideAutoCompleteDropdown();\n\n    let factory = this.resolver.resolveComponentFactory(Ng2AutoCompleteComponent);\n\n      this.componentRef = this.viewContainerRef.createComponent(factory);\n      this.acEl = this.componentRef.location.nativeElement;\n      let component = this.componentRef.instance;\n\n      component.listFormatter = this.listFormatter;\n      //component.prefillFunc = this.prefillFunc;\n      component.pathToData = this.pathToData;\n      component.minChars = this.minChars;\n      component.valuePropertyName = this.valuePropertyName || 'id';\n      component.displayPropertyName = this.displayPropertyName || 'value';\n      component.source = this.source;\n      component.placeholder = this.placeholder;\n      component.valueSelected.subscribe(this.selectNewValue);\n\n      this.acEl.style.display = 'none';\n      setTimeout(this.styleAutoCompleteDropdown);\n  }\n\n  hideAutoCompleteDropdown = (event?: any): void =>  {\n    if (this.componentRef) {\n      if (\n        event && event.type === 'click' &&\n        event.target !== this.el &&\n        event.target !== this.acEl\n      ) {\n        this.componentRef.destroy();\n        this.componentRef = undefined;\n      } else if (!event) {\n        this.componentRef.destroy();\n        this.componentRef = undefined;\n      }\n    }\n  };\n\n  styleAutoCompleteDropdown= () => {\n    let component = this.componentRef.instance;\n\n    /* setting width/height auto complete */\n    let thisElBCR = this.el.getBoundingClientRect();\n    this.acEl.style.width = thisElBCR.width + 'px';\n    this.acEl.style.position = 'absolute';\n    this.acEl.style.zIndex = '1';\n    this.acEl.style.top = '0';\n    this.acEl.style.left = '0';\n    this.acEl.style.display = 'inline-block';\n\n    component.inputEl.style.width = (thisElBCR.width - 30) + 'px';\n    component.inputEl.style.height = thisElBCR.height + 'px';\n    component.inputEl.focus();\n  };\n\n  selectNewValue = (val: any) => {\n    if (val && typeof val !== \"string\") {\n      let displayVal = val[this.displayPropertyName || 'value'];\n      val.toString = function() {return displayVal;}\n    }\n    this.ngModelChange.emit(val);\n    if (this.valueChanged) {\n      this.valueChanged(val);\n    }\n    this.hideAutoCompleteDropdown();\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule  } from '@angular/platform-browser';\n\n// Components\nimport { Ng2AutoCompleteComponent } from './ng2-auto-complete.component';\n\n// Services\nimport { Ng2AutoComplete } from './ng2-auto-complete.service';\n\n// Directives\nimport { Ng2AutoCompleteDirective } from './ng2-auto-complete.directive';\n\nexport class Angular2DataTableModule { }\n@NgModule({\n  imports: [ BrowserModule, FormsModule ],\n  declarations: [Ng2AutoCompleteComponent, Ng2AutoCompleteDirective],\n  exports:  [Ng2AutoCompleteComponent, Ng2AutoCompleteDirective],\n  entryComponents: [Ng2AutoCompleteComponent],\n  providers: [ Ng2AutoComplete ]\n})\nexport class Ng2AutoCompleteModule {}\n\nexport {\n  Ng2AutoComplete,\n  Ng2AutoCompleteComponent,\n  Ng2AutoCompleteDirective\n};\n"],"names":["Injectable","Subject","Input","Component","ViewEncapsulation","EventEmitter","Output","Directive","NgModule","BrowserModule","FormsModule"],"mappings":"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"}